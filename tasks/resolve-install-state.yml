---
- name: Resolve UniFi Network application install state
  block:
    - name: Populate service facts
      ansible.builtin.service_facts:

    - name: Debug 'ansible_facts.services'
      ansible.builtin.debug:
        var: ansible_facts.services
        verbosity: 3

    - name: Check if UniFi service exists
      when: ansible_facts.services is defined
      ansible.builtin.set_fact:
        unifi_service_status: "{{ (ansible_facts.services is search('unifi')) | ternary('true', 'false') }}"

    - name: Debug 'unifi_service_status'
      ansible.builtin.debug:
        var: unifi_service_status
        verbosity: 3

    - name: Resolve UniFi Network application installation
      ansible.builtin.stat:
        path: "{{ path }}"
      loop:
        - "{{ unifi_install_real_path }}"
        - "{{ unifi_data_real_path }}"
        - "{{ unifi_install_vanity_path }}"
        - "{{ unifi_data_working_path }}"
      loop_control:
        loop_var: path
      register: _unifi_path_status

    - name: Set 'unifi_path_status'
      ansible.builtin.set_fact:
        unifi_path_status: "{{ _unifi_path_status.results | community.general.json_query(unifi_path_status_query) }}"
      vars:
        unifi_path_status_query: "[*].{path: path, stat: stat}"

    - name: Debug 'unifi_path_status'
      ansible.builtin.debug:
        var: _unifi_path_status
        verbosity: 3
