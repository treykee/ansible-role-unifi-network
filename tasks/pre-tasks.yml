---
- name: Set SELinux to permissive mode
  when: ansible_selinux.status == "enabled"
  ansible.posix.selinux:
    policy: targeted
    state: permissive

- name: Get firewalld status
  tags:
    - molecule.idempotence.notest
  ansible.builtin.stat:
    path: /etc/sysconfig/firewalld
  register: _firewalld_status

- name: Stop UniFi service
  tags:
    - molecule-idempotence-notest
  when:
    - ansible_service_mgr == "systemd"
    - unifi_service_status is true
  ansible.builtin.systemd:
    name: unifi.service
    state: stopped

- name: Unlink working data directory
  when:
    - unifi_data_working_path.stat.islnk is defined
    - unifi_data_working_path.stat.islnk
  ansible.builtin.file:
    path: "{{ unifi_data_working_path }}"
    follow: false
    state: absent

- name: Unlink vanity install directory
  when:
    - unifi_install_vanity_path.stat.islnk is defined
    - unifi_install_vanity_path.stat.islnk
  ansible.builtin.file:
    path: "{{ unifi_install_vanity_path }}"
    follow: false
    state: absent

- name: Create temp working directory
  tags:
    - molecule-idempotence-notest
  when: _temp_dir is not defined
  ansible.builtin.tempfile:
    state: directory
    prefix: unifi
  register: _temp_dir

- name: Debug '_temp_dir'
  ansible.builtin.debug:
    var: _temp_dir
    verbosity: 3

- name: Get and unarchive UniFi Network application package
  when:
    - unifi_package_url is defined
    - _temp_dir is defined
  ansible.builtin.unarchive:
    src: "{{ unifi_package_url }}"
    dest: "{{ _temp_dir.path }}/"
    remote_src: true
    unsafe_writes: true
    extra_opts:
      - -qq
    creates: "{{ _temp_dir.path }}/UniFi"

- name: Template systemd unit file
  when:
    - ansible_service_mgr == "systemd"
    - unifi_service_status is false
  ansible.builtin.template:
    src: "{{ role_path }}/templates/unifi.service.j2"
    dest: /usr/lib/systemd/system/unifi.service
    owner: "{{ unifi_user }}"
    group: "{{ unifi_group }}"
    mode: '0644'
