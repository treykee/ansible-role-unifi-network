---
- name: Stop UniFi Network application service
  when: ansible_service_mgr == "systemd" and unifi_service_status is true
  ansible.builtin.systemd:
    name: unifi.service
    state: stopped

- name: Unlink working data directory
  ansible.builtin.file:
    path: "{{ unifi_working_data_path }}"
    state: absent

- name: Unlink vanity install directory
  ansible.builtin.file:
    path: "{{ unifi_vanity_install_path }}"
    state: absent

- name: Create temp working directory
  ansible.builtin.tempfile:
    state: directory
    suffix: "-unifi"
  register: _temp_dir

- name: Fetch and unarchive UniFi Network application source
  ansible.builtin.unarchive:
    src: "{{ unifi_src_url }}"
    dest: "{{ _temp_dir.path }}"
    remote_src: true
    owner: "{{ unifi_user }}"
    group: "{{ unifi_group }}"

- name: Copy systemd startup script
  when: ansible_service_mgr == "systemd" and unifi_service_status is false
  ansible.builtin.copy:
    src: "{{ role_path }}/files/unifi.service"
    dest: "/etc/systemd/system/unifi.service"
    mode: 0744

- name: Set SELinux to permissive mode
  when: ansible_selinux.status == "enabled"
  ansible.posix.selinux:
    policy: targeted
    state: permissive

- name: Get firewalld status
  ansible.builtin.stat:
    path: /etc/sysconfig/firewalld
  register: _firewalld_status
